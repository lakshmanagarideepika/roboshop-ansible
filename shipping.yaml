- name: install shipping component
  hosts: shipping
  become: yes
  vars:
    mysql_password:
  tasks:
  - name: install maven
    ansible.builtin.dnf:
      name: maven
      state: present

  - name: create roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: Recursively remove app directory
    ansible.builtin.file:
      path: /app
      state: absent

  - name: create app directory
    ansible.builtin.file:
      path: /app
      state: directory

  - name: download shipping application
    ansible.builtin.get_url:
      url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /tmp

  - name: extract shipping application
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes

  - name: install dependencies
    ansible.builtin.command: mvn clean package
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: deamon reload and start
    ansible.builtin.systemd_service:
      deamon_reload: true
      
  - name: install mysql client
    ansible.builtin.dnf:
      name: mysql
      state: present
  
  #- name: check cities schema exists or not
   # ansible.builtin.command:  #here is some data i didn't written that if you want refer video once to get info


  - name: load cities data
    ansible.builtin.shell:"mysql -h mysql.starlad.online -uroot -p{{mysql_password}} < /app/schema/shipping.sql"
    when: schema.stdout != "1"

    - name: start and enable shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: yes
